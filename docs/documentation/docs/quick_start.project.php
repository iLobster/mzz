<p>Структура типичного проекта, выполненного на основе mzz выглядит следующим образом:</p>
<<code>>
<папка проекта>/
  tmp/
  www/
  configs/
  templates/
  .htaccess
  application.php
  config.php
  index.php
<</code>>
<p>Перечислим все представленные каталоги и опишем их назначение:
</p>
    <ul>
        <li><em>tmp/</em> - каталог, в котором распологаются временные файлы (кэш резолвера, скомпилированные шаблоны смарти...)
        </li>
        <li><em>www/</em> - основной каталог, в котором непосредственно размещается сам проект
            <ul>
                <li><em>configs/</em> - каталог, в котором располагаются различные конфигурационные файлы
                </li>
                <li><em>templates/</em> - каталог с шаблонами
                </li>
                <li><em>.htaccess</em> - служебный файл веб-сервера apache, в котором располагаются правила для mod_rewrite (и, возможно, другие настройки)
                </li>
                <li><em>application.php</em> - файл, в котором лежит класс application, расширяющий базовый класс core. Метод run() этого класса инициализирует запуск приложения
                </li>
                <li><em>config.php</em> - основной конфигурационный файл. В нём прописываются пути до фреймворка, временного каталога, опции соединения с БД, и некоторые другие опции
                </li>
                <li><em>index.php</em> - файл, являющийся фактической точкой входа в приложение. В нём происходит подключение файлов config.php и application.php, инстанциация объекта класса application и запуск метода run()
                </li>
            </ul>
        </li>
    </ul>
</p>
<p>На схеме выше представлена минимальная структура каталогов проекта, которая может быть дополнена с целью изменения и расширения функционала приложения (см. раздел <a href="structure.classes.html#structure.classes.resolver">Resolvers</a>).</p>