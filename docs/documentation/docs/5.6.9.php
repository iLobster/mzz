<p>Давайте подведём итог проделанной работы. В течение нескольких часов мы написали достаточно универсальный модуль, который теперь без лишних трудозатрад можно запустить в контексте другого модуля, таким образом расширив функциональность, не прибегая к каким либо модификациям кода модуля. Продемонстрируем это на практике: добавьте в шаблон отображения конкретной страницы (<code>page.view.tpl</code>) следующую строку и откройте любой объект модуля Page, т.е. страницу.</p>
<<code>>{load module="comments" section="comments" action="list" parent_id=$page->getObjId()}<</code>>
<p>Однако стоит заметить, что эта запись не совсем корректна, поскольку автором будет установлен тот, кто ПЕРВЫМ откроет указанную страницу. Это устраняется добавлением поля author в модуль Page и передачей значения этого поля в модуль Comments.</p>
<p>Снизу должно появиться поле для ввода. Теперь страницы, как и новости, комментируемы. И так - для любого из объектов. Удобно, не правда ли? ;)</p>
<p>Подобные модули мы решили назвать addon'ы, потому как сами по себе они никакой смысловой нагрузки не несут, однако могут быть дополнениями к существующим модулям.</p>
<p>И в заключении - а зачем же был нужен <code>commentsFolder</code>? Как вы заметили - <code>commentsFolder</code> является неким "контейнером" для комментариев. Именно сущносте <code>commentsFolder</code> принадлежат методы list и post. Также, изменяя права на <code>commentsFolder</code>, можно управлять правами - кому можно добавлять комментарии для данного объекта, а кому - нет, а также устанавливать права по умолчанию для вновь создаваемых комментариев.</p>