Структура каталогов типичного модуля mzz выглядит следующим образом (рассмотрим на примере стандартного модуля news):<br />
<div class="code"><code>
        news<br />
        |<br />
        |------- <b>actions</b><br />
        |<br />
        |------- <b>controllers</b><br />
        |<br />
        |------- <b>mappers</b><br />
        |<br />
        |------- <b>maps</b><br />
        |<br />
        |------- <b>views</b><br />
        |<br />
        |------- news.php<br />
        |<br />
        |------- news.factory.php<br />
        |<br />
        |------- newsFolder.php<br />
</code></div>
<b>Жирным</b> на данной схеме выделены каталоги. Перечислим все представленные элементы и обозначим их назначение:<br />
<ul>
        <li>actions - каталог, в котором расположены ini-файлы, описывающие, какие действия есть у конкретного Доменного Объекта данного модуля. (ссылка на подробное описание в этом же разделе)
        </li>
        <li>controllers - каталог, в котором расположены контроллеры модуля. (ссылка на описание что такое контроллеры)
        </li>
        <li>mappers - каталог, в котором расположены мапперы. (ссылка на описание мапперов)
        </li>
        <li>maps - каталог, в котором расположены map-файлы, описывающие схему БД каждого из Доменных Объектов. (ДО ссылка на описание ДО, map - на описание мапфайла)
        </li>
        <li>views - каталог, в котором расположены файлы, являющиеся View-составляющей парадигмы MVC. (ссылка на MVC)
        </li>
        <li>news.php, newsFolder.php - Доменные Объекты модуля news.
        </li>
        <li>news.factory.php - фабрика (ссылка на описание паттерна), по запросу возвращающая нужный контроллер. (ссылка на описание контроллера в MVC)
        </li>
</ul>
Рассмотрим примеры файлов рассматриваемого модуля. Для демонстрации выберем метод <i>View</i>.