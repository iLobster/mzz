<p>Структура каталогов типичного модуля mzz выглядит следующим образом (рассмотрим на примере стандартного модуля <code>news</code>):</p>
<<code>>
        news<br />
        |<br />
        |------- <b>actions/</b><br />
        |<br />
        |------- <b>controllers/</b><br />
        |<br />
        |------- <b>mappers/</b><br />
        |<br />
        |------- <b>maps/</b><br />
        |<br />
        |------- <b>views/</b><br />
        |<br />
        |------- news.php<br />
        |<br />
        |------- news.factory.php<br />
        |<br />
        |------- newsFolder.php<br />
<</code>>
<p>Перечислим все представленные элементы и обозначим их назначение:
<ul>
        <li><em>actions/</em> - каталог, в котором расположены ini-файлы, описывающие, какие действия есть у конкретного Доменного Объекта данного модуля. (ссылка на подробное описание в этом же разделе)
        </li>
        <li><em>controllers/</em> - каталог, в котором расположены контроллеры модуля. (ссылка на описание что такое контроллеры)
        </li>
        <li><em>mappers/</em> - каталог, в котором расположены мапперы. (ссылка на описание мапперов)
        </li>
        <li><em>maps/</em> - каталог, в котором расположены map-файлы, описывающие схему БД каждого из Доменных Объектов. (ДО ссылка на описание ДО, map - на описание мапфайла)
        </li>
        <li><em>views/</em> - каталог, в котором расположены файлы, являющиеся View-составляющей парадигмы MVC. (ссылка на MVC)
        </li>
        <li><em>news.php, newsFolder.php</em> - Доменные Объекты модуля <code>news</code>.
        </li>
        <li><em>news.factory.php</em> - фабрика (ссылка на описание паттерна), по запросу возвращающая нужный контроллер. (ссылка на описание контроллера в MVC)
        </li>
</ul>
</p>
<p>Далее рассмотрим примеры файлов рассматриваемого модуля. Для демонстрации выберем метод <code>View</code>.</p>