3.1.1.
Шаблоны являются одной из View-составляющих парадигмы MVC, на основе которой построен mzz. Другой составляющей является класс пхп, определяющий конкретный шаблон и запускающий этот шаблон на выполнение.
В качестве обработчика шаблонов используется Smarty. Шаблоны располагаются в папке с проектом в директории templates. В mzz образно все шаблоны делятся на 2 вида: "активные" и "пассивные".
Первые служат своеобразной точкой входа в приложение. Эти шаблоны располагаются в корне папки templates и имеют имена вроде: act.module.action.tpl
Где module и action - имя модуля и действия соответственно, который будет запущен этим шаблоном (это просто соглашение для удобства, в действительности любой шаблон может запускать любой модуль). Активный шаблон может быть запущен фронтконтроллером (ссылка на описание). На один запрос пользователя может быть запущен лишь один "активный" шаблон.
"Пассивные" шаблоны, в свою очередь, могут быть вызваны как "активными" шаблонами в процессе запуска приложения, так и другими "пассивными" шаблонами. Их целью является отображение данных, полученных из модели (в контексте парадигмы MVC), в требуемом виде.

3.1.2.
Функция {load} предназначена для запуска модулей из шаблонов. Этот метод назовём "стратегией вытягивания", в которой шаблоны (по сути клиентский код) сами определяют, какие данные нужно получить и отобразить пользователю. За счёт этого добивается удобство и гибкость построенных на подобных системах, использующих данный принцип, приложений.

Синтаксис функции:
{load module="" action="" args="" section=""}
Описание аргументов:
        - module: имя загружаемого модуля, обязательный параметр;
        - action: имя действия загружаемого модуля, обязательный параметр;
        - args: список аргументов, используемых в запускаемом модуле;
        - section: имя раздела, в контексте которого будет запущен модуль, за счёт чего достигается возможность обслуживания модулем различных разделов, обладающих одинаковой функциональностью.

Примеры:
{load module="news" action="list"}
{load module="news" action="view" args="1" section="mainnews"}

3.1.3.
Функция {add} предназначена для подключения внешних файлов с js и css. Это необходимо для того, чтобы в результирующем документе, который будет служить результатом запроса клиента, подключение данных ресурсов происходило в одном месте централизованно, а не разрозненно по всему документу. Также функция не допускает повторного включения одного и того же файла.

Синтаксис функции:
{add file="" tpl=""}
Описание аргументов:
        - file: имя подключаемого файла, обязательный аргумент
        - tpl: имя шаблона, определяющего формат, с помощью котором имя подключаемого файла будет оформлено специальным образом, результат обработки которого будет включён в ответ пользователю

Примеры использования:
{add file="style.css"}
{add file="js.css" tpl="some_other_template.tpl"}

3.1.4
...





3.2.
3.2.1.
Тулкит