               Global
----------------------------------
"-" новые TODO
"+" реализовано
"*" в процессе (с указанием ника)
----------------------------------

- заменить все require_once на loadFile::

- продокумментировать все резолверы

- убрать из комментариев все fileResolver::

- сделать кеширующий резолвер

+ сделать factoryResolver

- Registry. Синглетон не позволяет удалить существующий объект, за подробностями в тест testRequestDirtyPathParser (файл www/tests/cases/request/requestparser.case.php)

- actionMapper

- есть предложение константы хранить в классах как у сида

- предлагаю ВОТ ТУТ планировать всю работу. чтобы не было непоняток
  и использовать принципы разработки при ТДД (примерно как на стр 22 книжки)
  т.е. написание РАБОЧЕГО кода, затем тестирование его (ручками ессна), затем приведение к божескому виду
  и также написание того что нужно сейчас в минимальном варианте, т.е. все глобальные наследования будут делаться
  не заранее а только тогда когда в них появится необходимость и возможность проведения

- Нужно разобраться с ресолверами. Потребуется метод подключающий либы из директории /system/libs.

- Внедрение исключений (Exceptions)

- JIP

- интернационализация интерфейса и контента

- метод edit для новостей

- реврайт урла перед передачей его в фронтконтроллер

- придумать стандарт для именования шаблонов. т.е. разделить активные и пассивные каким нибудь ключевым словом, типа (act.news.list.tpl - активный шаблон для секшна news, экшна list; news.list.tpl - пассивный шаблон, в котором собственно и находится ХТМЛ для расположения новости)
кстати - вот сразу подумал.. а какой смысл у нас у таблицы section & action -> template?? может сразу в шаблонах это и разрулить?? act.section.action.tpl ? ;)

- сделать примерный интерфейс для новостей (набор файлов: view, model, controller, etc) и затем научить смарти загружать их из шаблона. Фактически придумать унифицированный интерфейс который будет стандартом во всём приложении

+ Написал frontcontroller (./system/core/frontcontroller/frontcontroller.php).
В 20 строке (./system/core/core/core.php) РУЧКАМИ выставляю экшн, т.к. requestParser не выполняет своих обязанностях. Сам пофикси свои реги - я могу поломать что ты задумал там (do- - весьма лишняя вещь, принимаем что если экшн есть - то он последний аргумент в урле)
В строке 24 выводится результат работы фронтконтроллера - т.е. имя шаблона который должен далее подхватить управление => после этого уже нужно запускать смартей его


- Нужно переписать немного, пока мы совсем не отошли от первоначальной идеи. Надо requestparser заставить вызывать не фабрику,а шаблон, а шаблон будет уже обращаться к другому классу для запроса к фабрике. (Реализовано?)

- Протестировать HttpFileRequest , у меня не получилось, я не знаю как вызвать ошибки перечисленные в комментариях filerequest.php. 

